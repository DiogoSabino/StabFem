function SF_HarmonicForcing(baseflow,Omega_values)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%
%%%	File: SF_HarmonicForcing.m
%%%
%%% INPUTS: baseflow (for knowing the Re), Omega_values(To select which ones to calculate)
%%%
%%% Contributours: Diogo Sabino
%%% Last Modification: Diogo Sabino, 22 Juin 2018
%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
global ff ffdir ffdatadir sfdir verbosity ffdataharmonicdir

%% Set omega values not calculated yet
Omega_to_compute=[];

all_data_stored_file=[ffdataharmonicdir, 'Forced_Harmonic2D_Re' num2str(baseflow.Re) 'TOTAL.ff2m'];
if exist(all_data_stored_file)~=0
    %import all data already calculted, if exists any
    all_data_stored=importFFdata(all_data_stored_file);
    %discover the values of Omega that have not been calculated
    for i=1:size(Omega_values,2)
        if(ismembertol(Omega_values(i),all_data_stored.OMEGAtab)==0)
            Omega_to_compute=[Omega_to_compute Omega_values(i)];
        end
    end
    
else
    Omega_to_compute=Omega_values;
end

% Number of omega values to be calculated
Nomega=size(Omega_to_compute,2);

%% .edp command execution
if isempty(Omega_to_compute)==1
    disp('All demanded omegas were already calculated');
    % And the .edp won't be called
else
    % The .edp will be called
    % Create the command string:
    stringparam = [num2str(Nomega) ' '];
    for omega = Omega_to_compute
        stringparam = [stringparam num2str(omega) '  ' ];
    end
    disp(['The following Omega values will be calculated: ' stringparam]);
    
    command = ['echo  ' stringparam ' | ' ff ' FF_Forced_Harmonic_2D_Lateral_Oscillations.edp'];
    disp(command);
    error='Error in FF_Forced_Harmonic_2D_Lateral_Oscillations.edp';
    
    mysystem(command,error); %Execute .edp file with FreeFEM++ for specific Re
    
    %Add new omegas calculated
    
    new_data_stored_file=[ffdataharmonicdir 'Forced_Harmonic2D_Re' num2str(baseflow.Re) '.ff2m'];
    new_data_stored=importFFdata(new_data_stored_file);
    disp(new_data_stored.OMEGAtab)
    if exist(all_data_stored_file)~=0
        for i=1:size(new_data_stored.OMEGAtab,1)
            for j=1:size(all_data_stored.OMEGAtab,1)
                
                if(new_data_stored.OMEGAtab(i)<all_data_stored.OMEGAtab(j))
                    %Inserting OMEGA in the right place
                    all_data_stored.OMEGAtab= [all_data_stored.OMEGAtab(1:j-1,1);...
                        new_data_stored.OMEGAtab(i,1); all_data_stored.OMEGAtab(j:end,1)];
                    %Inserting LIFT in the right place
                    all_data_stored.Lift= [all_data_stored.Lift(1:j-1,1);...
                        new_data_stored.Lift(i); all_data_stored.Lift(j:end,1)];
                    %Inserting MOMENTUM in the right place
                    all_data_stored.Momentum= [all_data_stored.Momentum(1:j-1,1);...
                        new_data_stored.Momentum(i); all_data_stored.Momentum(j:end,1)];
                    break;%exit the j loop and entering in a new i-element
                end
                if(j==size(all_data_stored.OMEGAtab,1) ) %For add at the end of the list
                    %Inserting OMEGA in the right place
                    all_data_stored.OMEGAtab= [all_data_stored.OMEGAtab(1:j,1);...
                        new_data_stored.OMEGAtab(i,1)];
                    %Inserting LIFT in the right place
                    all_data_stored.Lift= [all_data_stored.Lift(1:j,1);...
                        new_data_stored.Lift(i)];
                    %Inserting MOMENTUM in the right place
                    all_data_stored.Momentum= [all_data_stored.Momentum(1:j,1);...
                        new_data_stored.Momentum(i)];
                    break;%exit the j loop and entering in a new i-element
                end
                
                
                
            end
        end
        
        %Write back in the file ff2m with all the values
        dlmwrite(all_data_stored_file,'###Data Generated by FF++ (Diogo test);','delimiter', '')
        dlmwrite(all_data_stored_file,'FileTOTOdiogo','delimiter', '', '-append')
        dlmwrite(all_data_stored_file,'Format : ','delimiter', '', '-append')
        Nomega=size(all_data_stored.OMEGAtab,1);
        formatff2m=['real.' num2str(Nomega) ' OMEGAtab' ' complex.' num2str(Nomega) ' Lift' ' complex.' num2str(Nomega) ' Momentum'];
        dlmwrite(all_data_stored_file,formatff2m,'delimiter', '', '-append');
        dlmwrite(all_data_stored_file,' ','delimiter', '', '-append'); %See if works
        for i=1:size(all_data_stored.OMEGAtab,1)
            dlmwrite(all_data_stored_file,num2str(all_data_stored.OMEGAtab(i)),'delimiter', '', '-append');
        end
        for i=1:size(all_data_stored.Lift,1)
            formatff2m=[num2str(real(all_data_stored.Lift(i))) ' ' num2str(imag(all_data_stored.Lift(i)))];
            dlmwrite(all_data_stored_file,formatff2m,'delimiter', '', '-append');
        end
        for i=1:size(all_data_stored.Momentum,1)
            formatff2m=[num2str(real(all_data_stored.Momentum(i))) ' ' num2str(imag(all_data_stored.Momentum(i)))];
            dlmwrite(all_data_stored_file,formatff2m,'delimiter', '', '-append');
        end
        
    else
        % all_data_stored_file does not exist yet, so lest create it
        system(['cp ' new_data_stored_file ' ' all_data_stored_file ]);
    end
    
end

end  %End file

